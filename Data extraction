!apt-get install -y poppler-utils tesseract-ocr
!pip install pdf2image pytesseract pandas

import pytesseract
from pdf2image import convert_from_path
import pandas as pd
import re
from google.colab import files

#Uploadind PDF from pc
uploaded=files.upload()
pdf_path=list(uploaded.keys())[0]

#Pages to extract---> I have to work here
PAGES_TO_EXTRACT=[1,2,3,4]

#Converting selected pages to images
pages=convert_from_path(pdf_path, dpi=200,
                          first_page=min(PAGES_TO_EXTRACT),
                          last_page=max(PAGES_TO_EXTRACT))

#Extract text from pages using OCR
raw_lines=[]
for page_num,page in zip(PAGES_TO_EXTRACT, pages):
    text=pytesseract.image_to_string(page, lang="eng")
    raw_lines.extend([line.strip() for line in text.split("\n") if line.strip()])

#Filter lines by relevant keywords
KEEP_KEYWORDS=[
    "revenue", "income", "expenses", "profit", "tax", "equity",
    "liabilities", "assets", "cash", "reserves", "eps", "earning"
]

def is_relevant(line):
    line_lower=line.lower()
    return any(keyword in line_lower for keyword in KEEP_KEYWORDS)

filtered_lines=[line for line in raw_lines if is_relevant(line)]

# Parse lines into structured data
def parse_line(line):
    numbers=re.findall(r"[-]?\d{1,3}(?:,\d{3})*(?:\.\d+)?", line)
    numbers=[float(num.replace(",", "")) for num in numbers]
    label=re.split(r"[-]?\d{1,3}(?:,\d{3})*(?:\.\d+)?", line, 1)[0].strip()
    return {"Particular": label, "Values": numbers}

parsed=[parse_line(line) for line in filtered_lines if any(char.isdigit() for char in line)]

max_len=max((len(item["Values"]) for item in parsed), default=0)
for item in parsed:
    for i in range(max_len):
        item[f"col{i+1}"]=item["Values"][i] if i < len(item["Values"]) else None
    del item["Values"]

df=pd.DataFrame(parsed)

#Saving results
df.to_csv("structured_financials.csv", index=False)
df.to_json("structured_financials.json", orient="records", indent=2)

files.download("structured_financials.csv")
files.download("structured_financials.json")
